components:
  schemas:   
    GetAllBookingsResponseAdmin:
      type: object
      properties:
        bookings:
          type: array
          description: This is an array that contains all the bookings
          items:
            type: object
            properties:
              _id:
                type: string
                description: The id of the booking
              user:
                type: object
                properties:
                  _id:
                    type: string
                    description: The id of the user who booked
                  name:
                    type: string
                    description: The name of the user who booked              
              lesson:
                type: object
                properties:
                  _id:
                    type: string
                    description: The id of the lesson
                  type:
                    type: object
                    properties:
                      _id:
                        type: string
                        description: The id of the lesson type
                      name:
                        type: string
                        description: The name of the lesson type
                  location:
                    type: string
                    description: Location of the lesson
                  start:
                    type: date
                    description: Start of the lesson
                  end:
                    type: date
                    description: End of the lesson
                  price:
                    type: number
                    description: Price of the lesson
                  maxAttendants:
                    type: number
                    description: Maximum number of guests
                  instructor:
                    type: object
                    properties:
                      _id:
                        type: string
                        description: The userId of the instructor
                      name:
                        type: string
                        description: The name of the instructor
                  guests:
                    type: array
                    description: This is an array that contains all the guests of the lesson
                    items:
                      type: string
                      description: UserIds of the guests who booked the lesson
              numOfGuests:
                type: number
                description: Number of guests the user booked for (including the user)
              status:
                type: string
                description: Status of the booking
              createdAt:
                type: date
                description: When the user made the booking
              updatedAt:
                type: date
                description: When was the booking last modified
      example: 
        {
          "bookings": [
            {
              "_id": "62a912c795d3b3097e081bd4",
              "user": {
                "_id": "6284ce6a909f3ff83471380e",
                "name": "Instructor Enikő"
              },
              "lesson": {
                "_id": "629cc8328fc7974863190215",
                "type": {
                  "_id": "629cad1dcdac199216eea13b",
                  "name": "Yin yoga"
                },
                "location": "Test Locaz",
                "start": "2022-06-23T21:57:18.000Z",
                "end": "2022-06-28T21:57:18.000Z",
                "price": 10000,
                "maxAttendants": 21,
                "instructor": {
                  "_id": "6284ce6a909f3ff83471380e",
                  "name": "Instructor Enikő"
                },
                "__v": 16,
                "guests": [
                  "62a8c82bfbd9f0d794396a89",
                  "6284ce6a909f3ff83471380e",
                  "6284ce6a909f3ff83471380e",
                  "6284ce6a909f3ff83471380e",
                  "6284ce6a909f3ff83471380e",
                  "6284ce6a909f3ff83471380e",
                  "6284ce6a909f3ff83471380e",
                  "6284ce6a909f3ff83471380e",
                  "6284ce6a909f3ff83471380e",
                  "6284ce6a909f3ff83471380e",
                  "6284ce6a909f3ff83471380e",
                  "6284ce6a909f3ff83471380e",
                  "6284ce6a909f3ff83471380e"
                ]
              },
              "numOfGuests": 2,
              "status": "booked",
              "createdAt": "2022-06-14T22:59:19.898Z",
              "updatedAt": "2022-06-14T22:59:19.898Z",
              "__v": 0
            },
          ]
        }
    
    GetUsersBookingsResponse:
      type: object
      properties:
        bookings:
          type: array
          description: This is an array that contains all the bookings of the user
          items:
            type: object
            properties:
              _id:
                type: string
                description: The id of the booking
              user:
                type: string
                description: The id of the user who booked                                
              lesson:
                type: object
                properties:
                  _id:
                    type: string
                    description: The id of the lesson
                  type:
                    type: object
                    properties:
                      _id:
                        type: string
                        description: The id of the lesson type
                      name:
                        type: string
                        description: The name of the lesson type
                  location:
                    type: string
                    description: Location of the lesson
                  start:
                    type: date
                    description: Start of the lesson
                  end:
                    type: date
                    description: End of the lesson
                  price:
                    type: number
                    description: Price of the lesson
                  maxAttendants:
                    type: number
                    description: Maximum number of guests
                  instructor:
                    type: object
                    properties:
                      _id:
                        type: string
                        description: The userId of the instructor
                      name:
                        type: string
                        description: The name of the instructor
                  guests:
                    type: array
                    description: This is an array that contains all the guests of the lesson
                    items:
                      type: string
                      description: UserIds of the guests who booked the lesson
              numOfGuests:
                type: number
                description: Number of guests the user booked for (including the user)
              status:
                type: string
                description: Status of the booking
              createdAt:
                type: date
                description: When the user made the booking
              updatedAt:
                type: date
                description: When was the booking last modified
      example: 
        {
          "bookings": [
            {
              "_id": "62a912c795d3b3097e081bd4",
              "user": "6284ce6a909f3ff83471380e",
              "lesson": {
                "_id": "629cc8328fc7974863190215",
                "type": {
                  "_id": "629cad1dcdac199216eea13b",
                  "name": "Yin yoga"
                },
                "location": "Test Locaz",
                "start": "2022-06-23T21:57:18.000Z",
                "end": "2022-06-28T21:57:18.000Z",
                "price": 10000,
                "maxAttendants": 21,
                "instructor": {
                  "_id": "6284ce6a909f3ff83471380e",
                  "name": "Instructor Enikő"
                },
                "__v": 16,
                "guests": [
                  "6284ce6a909f3ff83471380e",
                  "6284ce6a909f3ff83471380e"
                ]
              },
              "numOfGuests": 2,
              "status": "booked",
              "createdAt": "2022-06-14T22:59:19.898Z",
              "updatedAt": "2022-06-14T22:59:19.898Z",
              "__v": 0
            },
          ]
        }
  
    CancelBookingResponse:
      type: object
      properties:
        result:
          type: object
          properties:
            confirmation:
              type: string
              description: Confirmation of succesfull cancellation
      example: 
        {
          "result": {
            "confirmation": "Booking cancelled"
          }
        }
    
    UpdateBookingResponse:
      type: object
      properties:
        result:
          type: object
          properties:
            confirmation:
              type: string
              description: Confirmation of succesfull update
      example: 
        {
          "result": {
            "confirmation": "Booking edited"
          }
        }
    
    AddBookingResponse:
      type: object
      properties:
        result:
          type: object
          properties:
            confirmation:
              type: string
              description: Confirmation of succesfull update
      example: 
        {
          "result": {
            "confirmation": "Booking successfull"
          }
        }
    
    AddBookingReqBody:
      type: object
      properties:
        userId:
          type: string
          description: The id of the user
        lessonId:
          type: string
          description: The id of the lesson
        numOfGuests:
          type: number
          description: Number of guests in booking
      example:
        {
          "userId": "629cadc8cdac199216eea13d",
          "lessonId": "4fseadc8cdac199216ee5g3d",
          "numOfGuests": 2,
        }
    
    UpdateBookingReqBody:
      type: object
      properties:
        status:
          type: string
          description: Status of booking after update
        numOfGuests:
          type: number
          description: Number of guests in booking after update
      example:
        {
          "status": "booked",
          "numOfGuests": 4,
        }

tags:
  name: Bookings
  description: Managing requests about bookings

/bookings/all:
  get:
    summary: ADMIN - Getting a list of all bookings
    tags: [Bookings]
    security:
      - bearerAuth: []
    responses:
      200:
        description: Bookings are successfully loaded from the database
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAllBookingsResponseAdmin'
      400:
        description: There was some error while retrieving data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
      401:
        description: Unauthorized acces or invalid token
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'

/bookings:
  get:
    summary: Getting user's bookings
    tags: [Bookings]
    security:
      - bearerAuth: []
    responses:
      200:
        description: Bookings are successfully loaded from the database
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetUsersBookingsResponse'
      400:
        description: There was some error while retrieving data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
      401:
        description: Unauthorized acces or invalid token
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'

  post:
    summary: Creating new booking
    tags: [Bookings]
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AddBookingReqBody'  
    responses:
      200:
        description: Successfull booking
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddBookingResponse'
      400:
        description: There was some error while creating data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
      401:
        description: Unauthorized acces or invalid token
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'

/bookings/cancel/{bookingId}:
  patch:
    summary: Cancel a booking
    tags: [Bookings]
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: bookingId
        required: true 
    responses:
      200:
        description: Successfull cancellation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelBookingResponse'
      400:
        description: There was some error while updating data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
      401:
        description: Unauthorized acces or invalid token
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'

/bookings/edit/{bookingId}:
  patch:
    summary: Update a booking
    tags: [Bookings]
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: bookingId
        required: true
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateBookingReqBody'    
    responses:
      200:
        description: Successfull update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBookingResponse'
      400:
        description: There was some error while updating data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
      401:
        description: Unauthorized acces or invalid token
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
