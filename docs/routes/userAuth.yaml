components:
  schemas:
    UserLogin:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          description: The email of the user logging in
        password:
          type: string
          description: The password of the user logging in
      example:
        email: johndoe@test.com
        password: JohnsPassword
    UserLoginGoogle:
      type: object
      required:
        - email
        - name
        - googleid
      properties:
        email:
          type: string
          description: The email of the user registered with google
        name:
          type: string
          description: The name of the user registered with google
        googleId:
          type: string
          description: The id generated by google for the user
      example:
        email: johndoe@test.com
        name: John Word
        googleId: dfs6dfsd6fsd7f65546df

    UserLoginResponse:
     type: object
     properties:
       token:
         type: string
         description: JWT token with user data and status
     example:
       token: asdaCCAAAAS332fsdfSDFSDfSDSDFSD
    UserRegistration:
      type: object
      required:
        - name
        - email
        - password
      properties:
        name:
          type: string
          description: The name of the registered user
        email:
          type: string
          description: The email of the registered user
        password:
          type: string
          description: The password of the registered user
      example:
        name: John Doe
        email: johndoe@test.com
        password: JohnsPassword
    UserRegistrationResponse:
     type: object
     properties:
       token:
         type: string
         description: JWT token with user data and status
     example:
       token: asdaCCAAAAS332fsdfSDFSDfSDSDFSD
    Error:
      type: object
      properties:
        errormessage:
          type: string
          description: Some error
      example:
          message: Name, email and password are required.     

tags:
  name: UserAuth
  description: User login data managing API

/login:
  post:
    summary: User login with email & password
    tags: [UserAuth]
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserLogin'
    responses:
      200:
        description: The login was successfull
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginResponse'
      400:
        description: There was an error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'

/login-google:
  post:
    summary: User login with google auth
    tags: [UserAuth]
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserLoginGoogle'
    responses:
      200:
        description: The login was successfull
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginResponse'
      400:
        description: There was an error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'

/register:
  post:
    summary: Create a new registration
    tags: [UserAuth]
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserRegistration'
    responses:
      200:
        description: The registration was successfully created, user logged in
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationResponse'
      400:
        description: There was an error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'